#!/usr/bin/env perl

=head1 NAME

B<sbg> - Interface to serialized objects 

=head1 SYNOPSIS

sbg myfile.stor <object-method> <parameters> ...

=head1 DESCRIPTION


=head1 OPTIONS

=head2 -h 

Print this help page

=head1 SEE ALSO

L<SBG::Storable>

=cut

################################################################################

# CPAN
use Getopt::Long;
use Pod::Usage;

use Scalar::Util qw/blessed/;

use SBG::Storable qw/module_for retrieve can_do/;

use Moose::Autobox;
use autobox;

################################################################################

my %ops;
my $result = GetOptions(\%ops, 
                        'h|help',
    );
my ($file,$method,@args) = @ARGV;
$file or pod2usage(-exitval=>2);
my $obj = retrieve($file);

if ($ops{'h'}) { 
    my $mstr = method_str($obj);
    pod2usage(-msg=>$mstr,-exitval=>0);
}

@args = load_args(@args);
my @res = $method ? $obj->$method(@args) : "$obj";
print "@res\n";


################################################################################

# If any param is readable file, convert to object
sub load_args {
    map { -r $_ ? retrieve($_) : $_ } @_;
}

sub method_str {
    my ($obj) = @_;
    $obj or return;
    my $str;
    $str .= "$file can do these functions:\n";
    my $methods = $obj->can_do;
    my $keys = $methods->keys->sort;
    foreach my $class (@$keys) {
        my $names = $methods->{$class}->sort;
        $str .= $class . "::\n\t@$names\n";
    }
    return $str;
}




