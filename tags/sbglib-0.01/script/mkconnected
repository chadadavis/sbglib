#!/usr/bin/env perl

use strict;

use File::Basename;
use SBG::NetworkIO;
use SBG::List qw(pairs);

my $file = shift || die;
my $base = basename $file, '.csv';
my $io = new SBG::NetworkIO(-file=>$file);
my $net = $io->read;

my @partitions = $net->connected_components;

my $component_i = 0;
foreach my $nodes (@partitions) {
    next unless @$nodes > 2;
    $component_i++;
    my $out = sprintf("%s-%02d.csv", $base, $component_i);
    printf "$out : %3d nodes, ", scalar(@$nodes);
    open my $fh, ">${out}";
    print $fh "# $out : @$nodes\n";

    my $template_i = 0;
    # All to all
    my @pairs = pairs(@$nodes);
    foreach my $pair (@pairs) {
        my @templates = templates($net, @$pair);
        next unless @templates;
        $template_i += @templates;
        print $fh $_->regurgitate . "\n" for @templates;
    }
    printf "%3d templates\n", $template_i;
}


################################################################################



sub templates {
    my ($net, $u, $v) = @_;
    my @iaction_names = $net->get_edge_attribute_names($u, $v);
    next unless @iaction_names;
    my @iactions = map { $net->get_interaction_by_id($_) } @iaction_names;
    return @iactions;
}
