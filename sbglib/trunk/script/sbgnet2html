#!/usr/bin/env perl

=head1 NAME

B<sbgnetwork> - 

=head1 SYNOPSIS

sbgnetwork <fasta-sequences.fa>

=head1 DESCRIPTION


=head1 OPTIONS

=head2 -h|elp Print this help page

=head2 -l|og Set logging level

In increasing order: TRACE DEBUG INFO WARN ERROR FATAL

I.e. setting B<-l WARN> (the default) will log warnings errors and fatal
messages, but no info or debug messages to the log file (B<log.log>)

=head2 -f|ile Log file

Default: <network name>.log in current directory


=head1 SEE ALSO

L<SBG::Network> , L<SBG::SearchI>

=cut

use strict;
use warnings;
use Pod::Usage;
use Getopt::Long;
use Carp;
use File::Basename;
use File::NFSLock;
use Fcntl qw/LOCK_EX/;

use SBG::U::Log qw/log/;

use SBG::NetworkIO::html;
# SBG::Seq basically always required if Storable objects contain a Bio::Seq
use SBG::Seq; 
use SBG::Role::Storable;


my %ops;
my $result = GetOptions(\%ops,
                        'h|help',
                        'l|log=s',
                        'f|logfile=s', 
                        'd|debug',
                        'o|output=s',
    );                  
if ($ops{'h'}) { pod2usage(-exitval=>1, -verbose=>2); }
$SIG{__DIE__} = \&confes if $ops{'d'};
SBG::U::Log::init($ops{'l'}, $ops{'f'}) if $ops{'l'};

my @files = @ARGV;

foreach my $file (@files) {

    my $basename = basename($file,'.stor');
    my $net = retrieve $file;
    my $output = $ops{o} || $basename . '.html';

    my $lock = File::NFSLock->new($output,LOCK_EX,60,5*60);
    unless ($lock) {
        warn "Could not lock for writing: $output";
        next;
    }
    my $htmlio = SBG::NetworkIO::html->new(file=>">>$output");
    $htmlio->write($net);

}
