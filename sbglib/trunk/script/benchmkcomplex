#!/usr/bin/env perl

use Modern::Perl;

use Moose::Autobox;
use File::Basename;

use SBG::Model;
use SBG::Complex;
use SBG::Role::Storable;

use SBG::DB::scop qw/scopdomain/;
use SBG::Run::cofm qw/cofm/;

my $file = shift or exit;
my $base = basename($file, '.stor');
my $subnet = retrieve($file);
my $complex = _net2complex($subnet);

my $out = "${base}.stor";
if (-s $out) {
    die "$out already exists in current dir. Run this elsewhere.\n";
}
$complex->store($out);
exit;

# Specific to benchmark nets, where we know the structure of what we're trying
# to build
sub _net2complex {
    my ($net,) = @_;
    my @nodes = $net->nodes;
    my $complex = new SBG::Complex;
    foreach my $node (@nodes) {
        my $scopdom = scopdomain($node);
        my $sphere = cofm($scopdom);
        my $model = new SBG::Model(query=>$node, subject=>$sphere);
        $complex->set($node, $model);
    }
    return $complex;
}
 
